
arch_chroot "" 2>/tmp/.errlog

pacstrap ${MOUNTPOINT}  2>/tmp/.errlog


	if [[ $COMMON_INSTALLED -eq 0 ]]; then
       dialog --backtitle "$VERSION - $SYSTEM ($ARCHI)" --title "$_InstComTitle" --yesno "$_InstComBody" 0 0
       
       if [[ $? -eq 0 ]]; then
          clear
          pacstrap ${MOUNTPOINT} gnome-keyring debian-archive-keyring archlinux-keyring gparted grub-customizer dconf dconf-editor cmake python2-xdg xdg-user-dirs xdg-utils rp-pppoe gamin ntfs-3g polkit gvfs gvfs-afc gvfs-smb xterm lxterminal gnome-terminal leafpad gedit geany bash-completion parcellite curl git wget gwget acetoneiso2 fuseiso 2>/tmp/.errlog
		  # debootstrap
          check_for_error
       fi
       
    fi
    
    # Either way, the option will no longer be presented.
    COMMON_INSTALLED=1


pacstrap ${MOUNTPOINT} ark xarchiver unzip zip unrar p7zip 2>/tmp/.errlog
pacstrap ${MOUNTPOINT} gnome-icon-theme ttf-liberation ttf-dejavu opendesktop-fonts ttf-bitstream-vera ttf-arphic-ukai ttf-arphic-uming ttf-hanazono terminus-font breeze breeze-grub breeze-icons 2>/tmp/.errlog
pacstrap ${MOUNTPOINT} brasero blender inkscape chromium transmission-gtk gimp gimp-help-ru okular vlc libreoffice-fresh libreoffice-fresh-ru 2>/tmp/.errlog
pacstrap ${MOUNTPOINT} keepassx truecrypt virtualbox kicad kicad-library kicad-library-3d smplayer wine-mono wine_gecko winetricks 2>/tmp/.errlog




myfunction() {
	
   dialog --backtitle "$VERSION - $SYSTEM ($ARCHI)" --title "$_Menu_Title" \
    --menu "$_Menu_Body" 0 0 2 \
 	"1" "$_Menu_Name_1" \
	"2" "$_Menu_Name_2" 2>${ANSWER}	

    case $(cat ${ANSWER}) in
        "1") # arch_chroot ""  2>/tmp/.errlog
             ;;
        "2") 
             ;;
          *) # Back to NAME Menu
             ;;
     esac	
     
     check_for_error
}

# Big Menu in variables parameter

	variables=""	
	for i in $(cat /FileDir/My_File); do
		variables="${variables} ${i} -"
	done
	
	dialog --backtitle "$VERSION - $SYSTEM ($ARCHI)" --title "$_LocateTitle" --menu "$_localeBody" 0 0 16 ${variables} 2>${ANSWER} || config_base_menu 
	variables=$(cat ${ANSWER})
	
	dirs=""	
ls / > ./example.conf
 for i in $(cat ./example.conf); do
      dirs="${dirs} ${i} - off"
  done
myfunction() {
	
   dialog --backtitle "VERSION - SYSTEM (ARCHI)" --title "_Menu_Title" \
    --menu "_Menu_Body" 0 0 3 \
 	"1" "_Menu_Name_1" \
	"2" "_Menu_Name_2" \
	"3" "Done"	2>${ANSWER}	
	variable=($(cat ${ANSWER}))
    case $variable in
        "1") dialog --backtitle "VERSION - SYSTEM (ARCHI)" --title "_LocateTitle" --checklist "_localeBody" 0 0 16 ${dirs} 2>${ANSWER} || myfunction
			LOCALE=$(cat ${ANSWER})
			sleep 1
			clear
			sleep 1
			echo "${LOCALE}"
			sleep 3
             ;;
        "2") # Menu 2
			sleep 1
			clear
			echo "Menu 2"
			sleep 1
             ;;
        "3") unset myls
			unset count
			rm -rf ${ANSWER}
			clear
			exit 0
             ;;
     esac	
     
     myfunction
}
	
# MSGBOX

dialog --backtitle "$VERSION - $SYSTEM ($ARCHI)" --title "$_MSG_Title" --msgbox "$_MSG_Body" 0 0

# INFOBOX

dialog --backtitle "$VERSION - $SYSTEM ($ARCHI)" --title "$_InfoBox_Title" --infobox "$_InfoBox_Body\n$(cat ${BTRFS_OPTS})" 0 0
sleep 2


# YESNO

dialog --defaultno --backtitle "$VERSION - $SYSTEM ($ARCHI)" --title "$_YESNO_Title" --yesno "$_YESNO_Body" 0 0

if [[ $? -eq 0 ]]; then
else
fi



# TEXTBOX

lsblk -o NAME,MODEL,TYPE,FSTYPE,SIZE,MOUNTPOINT | grep -v "loop" | grep -v "rom" | grep -v "arch_airootfs" > /tmp/.devlist
dialog --backtitle "$VERSION - $SYSTEM ($ARCHI)" --title "$_DevShowTitle" --textbox /tmp/.devlist 0 0


# INPUTBOX
dialog --backtitle "$VERSION - $SYSTEM ($ARCHI)" --title "$_NUsrTitle" --inputbox "$_NUsrBody" 0 0 "" 2>${ANSWER}
USER=$(cat ${ANSWER})


my_menu() {

	if [[ $SUB_MENU != "config_user_menu" ]]; then
	   SUB_MENU="config_user_menu"
	   HIGHLIGHT_SUB=1
	else
	   if [[ $HIGHLIGHT_SUB != 3 ]]; then
	      HIGHLIGHT_SUB=$(( HIGHLIGHT_SUB + 1 ))
	   fi
	fi

    dialog --default-item ${HIGHLIGHT_SUB} --backtitle "$VERSION - $SYSTEM ($ARCHI)" --title "$_MyMenu_Title" --menu "$_My_Menu_Body" 0 0 3 \
 	"1" "$_Menu_Name_1" \
	"2" "$_Menu_Name_2" \
	"3" "$_Back" 2>${ANSWER}
	
	HIGHLIGHT_SUB=$(cat ${ANSWER})
    case $(cat ${ANSWER}) in
    "1") 
         ;;
    "2") 
         ;;     
      *) # Back to NAME Menu
         ;;
    esac
    
    my_menu
}



_user_local

clear
info_search_pkg
_list_nvd_dkms_pkg=$(check_s_lst_pkg "${_nvd_dkms_pkg[*]}")
wait
clear

clear
info_search_pkg
_tr_gr_editor=$(search_translit_pkg "${_gr_editor}" "$_user_local")
wait
_tr_office=$(search_translit_pkg "${_office}" "$_user_local")
wait


clear
info_search_pkg
_list_bash_sh=$(check_s_lst_pkg "${_bash_sh[*]}")
wait
_clist_bash_sh=$(check_q_lst_pkg "${_bash_sh[*]}")
wait
clear




$XDG_CURRENT_DESKTOP
$DESKTOP_SESSION



# /etc/nanorc
include "/usr/share/nano/*.nanorc"

sed -i 's/\# include \"\/usr\/share\/nano\/\*.nanorc\"/include \"\/usr\/share\/nano\/\*.nanorc\"/' /etc/nanorc

sed -i 's/\# include \"\/usr\/share\/nano\/\*.nanorc\"/include \"\/usr\/share\/nano\/\*.nanorc\"/' ${MOUNTPOINT}/etc/nanorc 2>>/tmp/.errlog





persistent persistent-path=/boot/





cat aur_pkg_list.txt | cut -d '/' -f1 | grep -Evi "nvidia" | sort -ud

cat aur_pkg_list.txt | grep -Ei "emulators" | cut -d '/' -f2 | cut -d '.' -f1 | rev | cut -d '-' -f2-9 | rev



cat aur_pkg_list.txt | grep -Ei "gksu" | cut -d '/' -f2 | grep -Ei "^gksu"

cat aur_pkg_list.txt | grep -Ei "gksu-2.0.2-6-x86_64.pkg.tar.xz"











